[{"F:\\Intern Training\\training-1\\src\\index.js":"1","F:\\Intern Training\\training-1\\src\\App.js":"2","F:\\Intern Training\\training-1\\src\\reportWebVitals.js":"3","F:\\Intern Training\\training-1\\src\\components\\Navigation.js":"4","F:\\Intern Training\\training-1\\src\\components\\Home\\Home.js":"5","F:\\Intern Training\\training-1\\src\\Post\\AddPost.js":"6","F:\\Intern Training\\training-1\\src\\redux\\reducers\\authReducer.js":"7","F:\\Intern Training\\training-1\\src\\redux\\types\\authType.js":"8","F:\\Intern Training\\training-1\\src\\components\\Login\\Login.js":"9","F:\\Intern Training\\training-1\\src\\redux\\actions\\index.js":"10","F:\\Intern Training\\training-1\\src\\redux\\actions\\authActions.js":"11","F:\\Intern Training\\training-1\\src\\config\\firebase.js":"12","F:\\Intern Training\\training-1\\src\\components\\Register\\Register.js":"13","F:\\Intern Training\\training-1\\src\\redux\\actions\\postActions.js":"14","F:\\Intern Training\\training-1\\src\\redux\\types\\postType.js":"15","F:\\Intern Training\\training-1\\src\\redux\\reducers\\postReducer.js":"16","F:\\Intern Training\\training-1\\src\\Post\\SeePost.js":"17","F:\\Intern Training\\training-1\\src\\Post\\UpdatePost.js":"18"},{"size":1055,"mtime":1636453681644,"results":"19","hashOfConfig":"20"},{"size":899,"mtime":1636536850894,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1633682401425,"results":"22","hashOfConfig":"20"},{"size":1860,"mtime":1636509989986,"results":"23","hashOfConfig":"20"},{"size":2435,"mtime":1636539327800,"results":"24","hashOfConfig":"20"},{"size":2715,"mtime":1636531185837,"results":"25","hashOfConfig":"20"},{"size":447,"mtime":1636445771225,"results":"26","hashOfConfig":"20"},{"size":78,"mtime":1636443934393,"results":"27","hashOfConfig":"20"},{"size":2353,"mtime":1636530237836,"results":"28","hashOfConfig":"20"},{"size":182,"mtime":1636536230085,"results":"29","hashOfConfig":"20"},{"size":303,"mtime":1636530207443,"results":"30","hashOfConfig":"20"},{"size":587,"mtime":1636426742332,"results":"31","hashOfConfig":"20"},{"size":2814,"mtime":1636443944346,"results":"32","hashOfConfig":"20"},{"size":2206,"mtime":1636539017196,"results":"33","hashOfConfig":"20"},{"size":160,"mtime":1636535766013,"results":"34","hashOfConfig":"20"},{"size":902,"mtime":1636537888537,"results":"35","hashOfConfig":"20"},{"size":117,"mtime":1636532874019,"results":"36","hashOfConfig":"20"},{"size":3142,"mtime":1636539294379,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1cas80t",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},"F:\\Intern Training\\training-1\\src\\index.js",["80"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport authReducer from \"./redux/reducers/authReducer\";\nimport postReducer from \"./redux/reducers/postReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  posts: postReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["81","82"],"F:\\Intern Training\\training-1\\src\\App.js",["83","84"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport AddPost from \"./Post/AddPost\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport EditPost from \"./Post/UpdatePost\";\nimport SeePost from \"./Post/SeePost\";\n\nfunction App() {\n  return (\n    <Router>\n      {/* <Navigation /> */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} exact />\n        <Route path=\"/addpost\" element={<AddPost />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/post/:postId\" element={<SeePost />} />\n        <Route path=\"/post/:postId/edit\" element={<EditPost />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","F:\\Intern Training\\training-1\\src\\reportWebVitals.js",[],"F:\\Intern Training\\training-1\\src\\components\\Navigation.js",[],"F:\\Intern Training\\training-1\\src\\components\\Home\\Home.js",["85"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Navigation from \"../Navigation\";\r\nimport * as post from \"../../redux/actions/index\";\r\nimport * as auth from \"../../redux/actions/index\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport firebase from \"../../config/firebase\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Home = () => {\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(post.fetchPost());\r\n  }, [dispatch]);\r\n  const myPosts = posts;\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n      const data = {\r\n        user: user.providerData[0],\r\n        id: user.uid,\r\n      };\r\n      dispatch(auth.loginUser(data));\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {myPosts.map((myPost, index) => {\r\n        return (\r\n          <Card className=\"col-md-5 mx-auto px-0\" key={index}>\r\n            <Card.Body>\r\n              <Card.Title>{myPost.postData.title}</Card.Title>\r\n              <Card.Subtitle>{myPost.postData.description}</Card.Subtitle>\r\n            </Card.Body>\r\n            <Card.Footer className=\"bg-white\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"primary\"\r\n                className=\"form-control my-2\"\r\n                onClick={() => navigate(`/post/${myPost.postId}`)}\r\n              >\r\n                See Post\r\n              </Button>\r\n              <div className=\"d-flex w-100 px-5 mb-5 py-2 align-items-center justify-content-end\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-primary\"\r\n                  className=\"mx-2\"\r\n                  onClick={() => navigate(`/post/${myPost.postId}/edit`)}\r\n                >\r\n                  Edit Post\r\n                </Button>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"danger\"\r\n                  className=\"mx-2\"\r\n                  onClick={() => dispatch(post.removePost(myPost.postId))}\r\n                >\r\n                  Delete Post\r\n                </Button>\r\n              </div>\r\n            </Card.Footer>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","F:\\Intern Training\\training-1\\src\\Post\\AddPost.js",["86"],"import React, { useState } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport { Col, Container, Button, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as post from \"../redux/actions/index\";\r\n\r\nconst AddPost = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const reset = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      category: category,\r\n    };\r\n    dispatch(post.doPost(data));\r\n    // reset();\r\n  };\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Container>\r\n        <Row>\r\n          <Col md={12} style={{ textAlign: \"right\" }} className=\"my-5\">\r\n            <Button as={Link} to=\"/\" variant=\"dark\" className=\"mr-2\">\r\n              Go Back\r\n            </Button>\r\n          </Col>\r\n          <Col md={12} className=\" mb-3\">\r\n            <h1 className=\"display-3 text-dark text-center\">Add Post</h1>\r\n          </Col>\r\n          <Col md={6} className=\"mx-auto mb-5 shadow p-5\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  className=\"form-control\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"category\"\r\n                  placeholder=\"Categories\"\r\n                  className=\"form-control\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  placeholder=\"Enter Description\"\r\n                  className=\"form-control\"\r\n                  rows=\"8\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-dark btn-block\"\r\n                  value=\"Add Post\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","F:\\Intern Training\\training-1\\src\\redux\\reducers\\authReducer.js",[],"F:\\Intern Training\\training-1\\src\\redux\\types\\authType.js",[],"F:\\Intern Training\\training-1\\src\\components\\Login\\Login.js",[],"F:\\Intern Training\\training-1\\src\\redux\\actions\\index.js",[],"F:\\Intern Training\\training-1\\src\\redux\\actions\\authActions.js",[],"F:\\Intern Training\\training-1\\src\\config\\firebase.js",[],"F:\\Intern Training\\training-1\\src\\components\\Register\\Register.js",[],"F:\\Intern Training\\training-1\\src\\redux\\actions\\postActions.js",[],"F:\\Intern Training\\training-1\\src\\redux\\types\\postType.js",[],"F:\\Intern Training\\training-1\\src\\redux\\reducers\\postReducer.js",[],"F:\\Intern Training\\training-1\\src\\Post\\SeePost.js",[],"F:\\Intern Training\\training-1\\src\\Post\\UpdatePost.js",["87"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { Container, Row, Button, Col } from \"react-bootstrap\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport * as post from \"../redux/actions/index\";\r\n\r\nconst EditPost = () => {\r\n  const { postId } = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const currentPost = posts.find((post) => post.postId === postId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (currentPost) {\r\n      setTitle(currentPost.postData.title);\r\n      setCategory(currentPost.postData.category);\r\n      setDescription(currentPost.postData.description);\r\n    }\r\n  }, [currentPost, dispatch]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { title, description, category };\r\n    dispatch(post.updatePostData(currentPost, postId, data));\r\n  };\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Container>\r\n        <Row>\r\n          <Col md={12} className=\" mb-3\">\r\n            <h1 className=\"display-3 text-dark text-center\">Edit Post</h1>\r\n          </Col>\r\n          <Col md={6} className=\"mx-auto mb-5 shadow p-5\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  className=\"form-control\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"category\"\r\n                  placeholder=\"Categories\"\r\n                  className=\"form-control\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  placeholder=\"Enter Description\"\r\n                  className=\"form-control\"\r\n                  rows=\"8\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-dark btn-block\"\r\n                  value=\"Update Post\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  onClick={() => navigate(\"/\")}\r\n                >\r\n                  Go Back\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n",{"ruleId":"88","severity":1,"message":"89","line":7,"column":27,"nodeType":"90","messageId":"91","endLine":7,"endColumn":33},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"88","severity":1,"message":"96","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"97","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":30,"column":6,"nodeType":"100","endLine":30,"endColumn":8,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"102","line":13,"column":9,"nodeType":"90","messageId":"91","endLine":13,"endColumn":14},{"ruleId":"88","severity":1,"message":"103","line":4,"column":26,"nodeType":"90","messageId":"91","endLine":4,"endColumn":32},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'reset' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"109","text":"110"},[940,942],"[dispatch, navigate]"]